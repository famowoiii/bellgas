<?php

use Illuminate\Support\Facades\Route;

// Public Routes
Route::get('/', function () {
    return view('home');
});

Route::get('/home', function () {
    return view('home');
})->name('home');

// Authentication Routes
Route::get('/login', function () {
    return view('auth.login');
})->name('login');

Route::post('/login', [App\Http\Controllers\Web\AuthController::class, 'login']);
Route::post('/logout', [App\Http\Controllers\Web\AuthController::class, 'logout'])->name('logout');
Route::get('/logout', [App\Http\Controllers\Web\AuthController::class, 'logout'])->name('logout.get');

Route::get('/register', function () {
    return view('auth.register');
})->name('register');

Route::get('/forgot-password', function () {
    return view('auth.forgot-password');
})->name('password.request');

// Product Routes
Route::get('/products', function () {
    return view('products.index');
})->name('products.index');

Route::get('/products/{slug}', function ($slug) {
    return view('products.show', compact('slug'));
})->name('products.show');

// Cart & Checkout (with optional auth for better UX)
Route::get('/checkout', function () {
    $user = auth()->check() ? auth()->user() : null;
    return view('checkout.index', compact('user'));
})->name('checkout');

// Secured checkout route (require auth)
Route::middleware(['auth'])->group(function () {
    Route::get('/secure-checkout', function () {
        $user = auth()->user();
        return view('checkout.index', compact('user'));
    })->name('secure-checkout');
});

Route::get('/cart', function () {
    return view('cart.index');
})->name('cart');

// Customer Dashboard (temporary without auth for testing)  
Route::get('/dashboard', function () {
    return view('dashboard.index');
})->name('dashboard');

// Cart & Checkout (require auth) - uncomment for production
// Route::middleware(['auth'])->group(function () {
//     Route::get('/checkout', function () {
//         return view('checkout.index');
//     })->name('checkout');
//     
//     Route::get('/cart', function () {
//         return view('cart.index');
//     })->name('cart');
// });

// Customer Dashboard (temporarily without auth middleware for JWT compatibility)
Route::get('/orders', function () {
    return view('orders.simple');
})->name('orders.index');

Route::get('/orders/{id}', function ($id) {
    return view('orders.show-clean', compact('id'));
})->name('orders.show');

Route::get('/profile', function () {
    return view('profile.index');
})->name('profile');

Route::get('/addresses', function () {
    return view('addresses.index');
})->name('addresses');

// Receipt download routes (using session authentication)
Route::middleware(['web.auth'])->prefix('web')->group(function () {
    Route::get('/receipts/order/{order}/pdf', [\App\Http\Controllers\Api\ReceiptController::class, 'downloadPdf'])
        ->name('web.receipts.download');
    
    // Test authentication endpoint
    Route::get('/auth-test', function () {
        return response()->json([
            'authenticated' => auth()->check(),
            'user_id' => auth()->id(),
            'user' => auth()->user() ? auth()->user()->email : null,
            'guard' => auth()->getDefaultDriver(),
        ]);
    })->name('web.auth.test');
});

// Admin Routes (require admin authentication)
Route::middleware(['admin.auth'])->prefix('admin')->group(function () {
    Route::get('/dashboard', function () {
        return view('admin.dashboard');
    })->name('admin.dashboard');
    
    Route::get('/orders', function () {
        return view('admin.orders');
    })->name('admin.orders');
    
    Route::get('/products', function () {
        return view('admin.products');
    })->name('admin.products');
    
    Route::get('/customers', function () {
        return view('admin.customers');
    })->name('admin.customers');
    
    Route::get('/settings', function () {
        return view('admin.settings');
    })->name('admin.settings');
});

// Static Pages
Route::get('/about', function () {
    return view('pages.about');
})->name('about');

Route::get('/contact', function () {
    return view('pages.contact');
})->name('contact');

Route::get('/terms', function () {
    return view('pages.terms');
})->name('terms');

Route::get('/privacy', function () {
    return view('pages.privacy');
})->name('privacy');

// Test Routes (for development)
Route::get('/test-stripe', function () {
    return view('test.stripe');
})->name('test.stripe');

Route::get('/test-email', function () {
    return view('test.email');
})->name('test.email');

// Debug route - remove in production
Route::get('/debug-auth', function () {
    $user = \App\Models\User::where('email', 'kimpet@gmail.com')->first();
    if ($user) {
        \Illuminate\Support\Facades\Auth::login($user);
        session(['authenticated' => true]);
        session(['user_data' => [
            'id' => $user->id,
            'email' => $user->email,
            'first_name' => $user->first_name,
            'last_name' => $user->last_name,
            'role' => $user->role
        ]]);
        
        return redirect('/admin/dashboard');
    }
    return 'User tidak ditemukan';
});

// Debug route for customer login
Route::get('/debug-customer-login', function () {
    $user = \App\Models\User::where('email', 'john@example.com')->first();
    if ($user) {
        \Illuminate\Support\Facades\Auth::login($user);
        session(['authenticated' => true]);
        
        return response()->json([
            'success' => true,
            'message' => 'Logged in successfully',
            'user' => $user->email,
            'redirect' => '/secure-checkout'
        ]);
    }
    return response()->json(['error' => 'User tidak ditemukan']);
});

// Auto-login route for testing
Route::get('/login-and-checkout', function () {
    $user = \App\Models\User::where('email', 'john@example.com')->first();
    if ($user) {
        \Illuminate\Support\Facades\Auth::login($user);
        session(['authenticated' => true]);
        
        return redirect('/secure-checkout')->with('success', 'Auto-logged in as ' . $user->email);
    }
    return redirect('/login')->with('error', 'User tidak ditemukan');
});

// Receipt routes for web session authentication
Route::middleware(['auth'])->prefix('web/receipts')->group(function () {
    Route::get('order/{order}/pdf', [\App\Http\Controllers\Web\ReceiptController::class, 'downloadPdf'])
        ->name('web.receipts.download');
    Route::get('order/{order}/preview', [\App\Http\Controllers\Web\ReceiptController::class, 'preview'])
        ->name('web.receipts.preview');
});

// Admin receipt routes
Route::middleware(['auth', 'admin.auth'])->prefix('admin/receipts')->group(function () {
    Route::get('order/{order}/pdf', [\App\Http\Controllers\Web\ReceiptController::class, 'adminDownload'])
        ->name('admin.receipts.download');
});

// Customer orders page
Route::middleware(['auth'])->group(function () {
    Route::get('/my-orders', function () {
        return view('customer.orders');
    })->name('customer.orders');
});

// Web-based real-time routes for admin dashboard (session authentication)
Route::middleware(['auth', 'admin.auth'])->prefix('web/realtime')->group(function () {
    Route::get('orders', [\App\Http\Controllers\Api\RealtimeController::class, 'getOrderUpdates'])
        ->name('web.realtime.orders');
    Route::get('admin-stats', [\App\Http\Controllers\Api\RealtimeController::class, 'getAdminStats'])
        ->name('web.realtime.admin-stats');
});

// Web-based real-time routes for customer (session authentication)
Route::middleware(['auth'])->prefix('web/realtime')->group(function () {
    Route::get('customer-orders', [\App\Http\Controllers\Api\RealtimeController::class, 'getCustomerOrderUpdates'])
        ->name('web.realtime.customer-orders');
});
// Broadcasting routes untuk Reverb/Pusher WebSocket
Broadcast::routes(['middleware' => ['web', 'auth']]);
